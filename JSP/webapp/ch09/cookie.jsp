<%@ page contentType="text/html; charset=utf-8" %>

<쿠키(cookie)>
1)클라이언트와 웹 서버 간의 상태를 지속적으로 유지하는 방법
2)쿠키는 세션과 달리 상태 정보를 웹 서버가 아닌 클라이언트에 저장함
- ex) 웹 사이트를 처음 방문한 사용자가 로그인 인증을 하고 나면 id,pw를 기록한 쿠키가 생성됨
- 그 다음부터 사용자가 그 웹사이트에 접속하면 별도의 절차를 거치지 않고 쉽게 접속 가능
3)장점 : 클라이언트의 일정 폴더에 정보를 저장하기 때문에 웹 서버의 부하를 줄일 수 있음
4)단점 : 웹 브라우저가 접속했던 웹 사이트에 관한 정보와 개인정보가 기록되기 때문에 보안에 문제가 있음

<cookie 클래스의 메소드 종류>
- getComment():쿠키에 대한 설명 반환(String)
- getDomain():쿠키의 유효한 도메인 정보 반환(String)
- getMaxAge():쿠키의 유효기간 정보 반환(int)
- getName():쿠키 이름 반환
- getPath():쿠키의 유효한 디렉토리 정보 반환(String)
- getValue():쿠키에 설정된 값을 반환(String)
- getVersion():쿠키의 버전 반환(int)
- setComment(String):쿠키에 대한 설명 '설정'
- setDomain(String):쿠키의 유효한 도메인 '설정'
- setMaxAge(int):쿠키 유효기간 설정
- setPath(String):쿠키의 유효한 디렉토리 설정
- setValue(String):쿠키 값 설정
- setVersion(int):쿠키 버전 설정

<쿠키 기능 실행 과정>
1)브라우저로 사이트에 접속
2)서버는 정보를 저장한 쿠키 생성
3)생성된 쿠키를 브라우저로 전송
4)브라우저는 서버로부터 받은 쿠키 정보를 쿠키파일에 저장
5)브라우저가 다시 접속해 서버가 브라우저에게 쿠키 전송을 요청하면
	브라우저는 쿠키 정보를 서버에 넘겨준다.
6)서버는 쿠키 정보를 이용해 작업

<쿠키>
사용클래스	: cookie클래스
저장형식	: text
저장장소	: 클라이언트
종료시점	: 쿠키저장시 설정(설정하지 않을 경우 웹브라우저 종료시 소멸)
리소스 	: 클라이언트의 리소스 사용
보안	 	: 클라이언트에 저장되므로 사용자의 변경이 가능하여 보안에 취약

<세션>
사용클래스	: HttpSession 인터페이스
저장형식	: Object형
저장장소	: 서버(세션아이디만 클라이언트에 저장)
종료시점	: 정확한 시점을 알 수 없음
리소스	: 서버의 리소스를 사용
보안		: 서버에 저장되어 있어 상대적으로 안정적
